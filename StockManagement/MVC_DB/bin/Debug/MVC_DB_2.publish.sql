/*
Deployment script for StockManagement

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "StockManagement"
:setvar DefaultFilePrefix "StockManagement"
:setvar DefaultDataPath "C:\Users\pedro\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\pedro\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Material]...';


GO
CREATE TABLE [dbo].[Material] (
    [Id_Material]    INT           NOT NULL,
    [Name_Material]  NVARCHAR (50) NOT NULL,
    [Specs_Material] NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id_Material] ASC)
);


GO
PRINT N'Creating [dbo].[Provider]...';


GO
CREATE TABLE [dbo].[Provider] (
    [Id_Provider]      INT           NOT NULL,
    [Name_Provider]    NVARCHAR (50) NOT NULL,
    [Phone_Provider]   NVARCHAR (50) NULL,
    [Mail_Provider]    NVARCHAR (50) NULL,
    [Address_Provider] NVARCHAR (50) NULL,
    [Nif_Provider]     NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id_Provider] ASC)
);


GO
PRINT N'Creating [dbo].[Section]...';


GO
CREATE TABLE [dbo].[Section] (
    [Id_Section]   INT           NOT NULL,
    [Name_Section] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_Section] ASC)
);


GO
PRINT N'Creating [dbo].[StockMaterial]...';


GO
CREATE TABLE [dbo].[StockMaterial] (
    [Id_StockMaterial] INT           NOT NULL,
    [Id_Material]      INT           NOT NULL,
    [Id_Provider]      INT           NOT NULL,
    [Id_Section]       INT           NOT NULL,
    [Amount_Material]  INT           NULL,
    [Observations]     NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id_StockMaterial] ASC)
);


GO
PRINT N'Creating [dbo].[Supply]...';


GO
CREATE TABLE [dbo].[Supply] (
    [Id_Supply]        INT            NOT NULL,
    [Id_Provider]      INT            NOT NULL,
    [Id_Material]      INT            NOT NULL,
    [Amount_Material]  INT            NOT NULL,
    [TotalPrice_Suply] DECIMAL (4, 2) NULL,
    [Date_Supply]      DATE           NULL,
    PRIMARY KEY CLUSTERED ([Id_Supply] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Material]...';


GO
ALTER TABLE [dbo].[Material]
    ADD DEFAULT ('Nada a registar') FOR [Specs_Material];


GO
PRINT N'Creating unnamed constraint on [dbo].[Provider]...';


GO
ALTER TABLE [dbo].[Provider]
    ADD DEFAULT ('Nada a registar') FOR [Phone_Provider];


GO
PRINT N'Creating unnamed constraint on [dbo].[Provider]...';


GO
ALTER TABLE [dbo].[Provider]
    ADD DEFAULT ('Nada a registar') FOR [Mail_Provider];


GO
PRINT N'Creating unnamed constraint on [dbo].[Provider]...';


GO
ALTER TABLE [dbo].[Provider]
    ADD DEFAULT ('Nada a registar') FOR [Address_Provider];


GO
PRINT N'Creating unnamed constraint on [dbo].[Provider]...';


GO
ALTER TABLE [dbo].[Provider]
    ADD DEFAULT ('Nada a registar') FOR [Nif_Provider];


GO
PRINT N'Creating unnamed constraint on [dbo].[StockMaterial]...';


GO
ALTER TABLE [dbo].[StockMaterial]
    ADD DEFAULT 0 FOR [Amount_Material];


GO
PRINT N'Creating unnamed constraint on [dbo].[StockMaterial]...';


GO
ALTER TABLE [dbo].[StockMaterial]
    ADD DEFAULT ('Nada a registar') FOR [Observations];


GO
PRINT N'Creating unnamed constraint on [dbo].[Supply]...';


GO
ALTER TABLE [dbo].[Supply]
    ADD DEFAULT 0.0 FOR [TotalPrice_Suply];


GO
PRINT N'Creating unnamed constraint on [dbo].[Supply]...';


GO
ALTER TABLE [dbo].[Supply]
    ADD DEFAULT (getdate()) FOR [Date_Supply];


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1febe34b-908f-43e9-8785-b1227fb58cdc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1febe34b-908f-43e9-8785-b1227fb58cdc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '631d3f1c-cf30-43de-9ef5-fdacc723d052')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('631d3f1c-cf30-43de-9ef5-fdacc723d052')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1d9c0628-f728-451d-81a0-ede57a0a3d76')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1d9c0628-f728-451d-81a0-ede57a0a3d76')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5e432995-346c-43b4-81a5-ca42858f4d64')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5e432995-346c-43b4-81a5-ca42858f4d64')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f49fe740-8cad-451c-8cdc-00c2196228e6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f49fe740-8cad-451c-8cdc-00c2196228e6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bfe1c2c3-b0e9-40ae-b849-7676cf24eab2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bfe1c2c3-b0e9-40ae-b849-7676cf24eab2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'afe0124a-b0c4-4cbb-951b-289e3e86a9a8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('afe0124a-b0c4-4cbb-951b-289e3e86a9a8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '636e237b-4ec8-41ba-accb-4c96c90645b6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('636e237b-4ec8-41ba-accb-4c96c90645b6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c59c0e6f-6d1f-41e8-adbb-1a4d337af715')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c59c0e6f-6d1f-41e8-adbb-1a4d337af715')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a6579b51-9a66-49b2-ab7b-4d25b24f1c14')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a6579b51-9a66-49b2-ab7b-4d25b24f1c14')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c9f21230-a14e-443d-ac43-96766103d5ca')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c9f21230-a14e-443d-ac43-96766103d5ca')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '41558c0b-cbee-41f6-8cbb-a26bcaf9ec7f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('41558c0b-cbee-41f6-8cbb-a26bcaf9ec7f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '52555fd6-c9ea-47e6-ab9b-227e6ac1ea34')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('52555fd6-c9ea-47e6-ab9b-227e6ac1ea34')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
