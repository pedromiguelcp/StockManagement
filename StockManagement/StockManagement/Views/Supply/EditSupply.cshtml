@model StockManagement.Models.SupplyModel

@{
    ViewBag.Title = "Edit Supply";
}

<h2>Edit Supply</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id_Provider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Id_Provider, new SelectList(DataLibrary.BusinessLogic.ProviderProcessor.LoadProviders().OrderBy(x => x.Name_Provider), "Id_Provider", "Name_Provider"), "< Select >", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Provider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Id_Material, new SelectList(DataLibrary.BusinessLogic.MaterialProcessor.LoadMaterials().OrderBy(x => x.Name_Material), "Id_Material", "Name_Material"), "< Select >", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Id_Section, new SelectList(DataLibrary.BusinessLogic.SectionProcessor.LoadSections().OrderBy(x => x.Name_Section), "Id_Section", "Name_Section"), "< Select >", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount_Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount_Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount_Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalPrice_Supply, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalPrice_Supply, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalPrice_Supply, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date_Supply, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Supply, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date_Supply, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <a href="@Url.Action("ViewSupplys", "Supply")" class="btn btn-default btn-md">
                <i class="fas fa-arrow-left"></i>
                <span>Back</span>
            </a>
                <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
