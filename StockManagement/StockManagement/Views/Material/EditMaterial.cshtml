@model StockManagement.Models.Material.ListMaterialProviderModel

@{
    if (ViewBag.Message == "Material not edited")
    {
    <div class="alert alert-warning" role="alert">
        <button type="button" class="close" style="color:red" data-dismiss="alert">
            x
        </button>
        This Material name already exist or no one provider is registered for this material!
    </div>
        ViewBag.Message = "";
    }
    ViewBag.Title = "Edit Material";
}

<h2>Edit Material</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaterialModel.Name_Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaterialModel.Name_Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaterialModel.Name_Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaterialModel.Specs_Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaterialModel.Specs_Material, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nada a registar" } })
                @Html.ValidationMessageFor(model => model.MaterialModel.Specs_Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaterialModel.Id_Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.MaterialModel.Id_Section, new SelectList(DataLibrary.BusinessLogic.SectionProcessor.LoadSections().OrderBy(x => x.Name_Section), "Id_Section", "Name_Section"), "< Select >", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaterialModel.Id_Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div align="center">

            <input type="submit" style="border-color:forestgreen" value="Register Providers" class="btn btn-group-justified" formaction="@Url.Action("IncludeProvidersAux", "Material")" />
        </div>

        <br />

        <table class="table table-bordered table-striped table-hover">
            <tr>
                <th style="text-align:center">
                    @Html.DisplayNameFor(model => model.ListMaterialModel[0].Name_Provider)
                </th>
                <th style="text-align:center">
                    @Html.DisplayNameFor(model => model.ListMaterialModel[0].Unit_Cost)
                </th>
                <th style="text-align:center">
                    <i class="fas fa-folder-open fa-2x"></i>
                </th>
                <th style="text-align:center"></th>
            </tr>
            @if (Model.ListMaterialModel != null)
            {
                foreach (var item in Model.ListMaterialModel)
                {
        <tr>
            <td align="center">
                @Html.DisplayFor(modelItem => item.Name_Provider)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.Unit_Cost)
            </td>
            <td align="center">
                <a href="@Url.Action("SeeQuotationFile", "Provider",new {QuotationPath = item.QuotationPath })" target="_blank" title="See Quotation file" class="btn btn-default btn-md">
                    <i class="far fa-file "></i>
                </a>
            </td>
            <td align="center">
                <a href="@Url.Action("EditMaterialProvider", "Material",new { Name_Provider = item.Name_Provider})" class="btn btn-info btn-md">
                    <i class="far fa-edit"></i>
                </a>
                <a href="@Url.Action("DeleteMaterialProvider", "Material", new { Name_Provider = item.Name_Provider })" class="btn btn-danger btn-md">
                    <i class="far fa-trash-alt"></i>
                </a>
            </td>
        </tr>
                }
            }
        </table>

        <div class="form-group">
            <a href="@Url.Action("ViewMaterials", "Material")" class="btn btn-default btn-md">
                <i class="fas fa-arrow-left"></i>
                <span>Back</span>
            </a>
            <input type="submit" value="Edit" class="btn btn-success" />
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
