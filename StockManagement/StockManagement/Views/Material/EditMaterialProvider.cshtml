@model StockManagement.Models.MaterialModel

@{
    if (ViewBag.Message == "Provider not registered")
    {
        <div class="alert alert-warning" role="alert">
            <button type="button" class="close" style="color:red" data-dismiss="alert">
                x
            </button>
            This Provider is already registered for this material or the unit cost is zero!
        </div>
        ViewBag.Message = "";
    }
    ViewBag.Title = "IncludeProvider";
}

<h2>Register Provider</h2>


@using (Html.BeginForm("EditMaterialProvider",
                    "Material",
                    FormMethod.Post,
                    new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Name_Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name_Material, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Specs_Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Specs_Material, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Nada a registar" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name_Material, new { htmlAttributes = new { @class = "form-control", @Value = DataLibrary.BusinessLogic.SectionProcessor.LoadSectionById(Model.Id_Section).Name_Section, @disabled = "disabled" } })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id_Provider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Id_Provider, new SelectList(DataLibrary.BusinessLogic.ProviderProcessor.LoadProviders().OrderBy(x => x.Name_Provider), "Id_Provider", "Name_Provider"), "< Select >", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Provider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unit_Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Unit_Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Unit_Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "MM/DD/YY HH:MM:SS" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuotationPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="QuotationFile" required/>
            </div>
        </div>

        <div class="form-group">
            <a href="@Url.Action("DiscardIncludeProvider", "Material")" class="btn btn-default btn-md">
                <i class="fas fa-arrow-left"></i>
                <span>Discard</span>
            </a>
            <input type="submit" value="Edit" class="btn btn-success" />
        </div>
    </div>
}
